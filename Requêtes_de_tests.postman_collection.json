{
	"info": {
		"_postman_id": "519435e7-4992-4014-8e49-bb775f98efab",
		"name": "ClientManagerTestRequests",
		"description": "### Welcome to Postman! This is your first collection. \n\nCollections are your starting point for building and testing APIs. You can use this one to:\n\n• Group related requests\n• Test your API in real-world scenarios\n• Document and share your requests\n\nUpdate the name and overview whenever you’re ready to make it yours.\n\n[Learn more about Postman Collections.](https://learning.postman.com/docs/collections/collections-overview/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "49237250",
		"_collection_link": "https://noadevanthery28-7125035.postman.co/workspace/Noa's-Team's-Workspace~9aaf3226-c954-48e1-8536-db63ddb66b53/collection/49237250-519435e7-4992-4014-8e49-bb775f98efab?action=share&source=collection_link&creator=49237250"
	},
	"item": [
		{
			"name": "Create a Person",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"test test\",\n  \"phone\": \"+1012 345 67 89\",\n  \"email\": \"jtttete.dupont@example.com\",\n  \"birthdate\": \"2022-11-01\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/clients/person",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"clients",
						"person"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Create a Company",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"My company\",\r\n  \"phone\": \"021 228 82 81\",\r\n  \"email\": \"test@test.ch\",\r\n  \"companyIdentifier\": \"CHR-122\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/clients/company",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"clients",
						"company"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get client by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/clients/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"clients",
						"1"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Modify a client",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"TEST man\",\r\n  \"phone\": \"0876543210\",\r\n  \"email\": \"rfrree.cj\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/clients/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"clients",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a client (end all his contracts)",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/clients/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"clients",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Assign a contract to a client",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"startDate\": \"2025-01-01\",\r\n  \"endDate\": \"2025-12-15\",\r\n  \"costAmount\": 434341\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/clients/1/contracts",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"clients",
						"1",
						"contracts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Assign a contract with missing fields",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"costAmount\": 11111\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/clients/1/contracts",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"clients",
						"1",
						"contracts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get contracts of a client",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Pierre Dupont\",\r\n  \"phone\": \"9876543210\",\r\n  \"email\": \"pierre.dupont@example.com\"\r\n}"
				},
				"url": {
					"raw": "http://localhost:8080/api/clients/1/contracts",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"clients",
						"1",
						"contracts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get contracts of a client with the date filter",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/clients/1/contracts?updateDateFilter=2025-10-15",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"clients",
						"1",
						"contracts"
					],
					"query": [
						{
							"key": "updateDateFilter",
							"value": "2025-10-15"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get sum of a client contracts",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/clients/1/contracts/sum",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"clients",
						"1",
						"contracts",
						"sum"
					]
				}
			},
			"response": []
		},
		{
			"name": "Modify a contrat",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"costAmount\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/clients/1/contracts/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"clients",
						"1",
						"contracts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a contract",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/clients/1/contracts/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"clients",
						"1",
						"contracts",
						"1"
					]
				}
			},
			"response": []
		}
	]
}